<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.skraba.beam.enchiridion</groupId>
  <artifactId>beam-enchiridion</artifactId>
  <version>0.0.1-SNAPSHOT</version>

  <name>Beam Enchiridion :: Parent</name>
  <packaging>pom</packaging>

  <properties>
    <!-- skip the deployment for aggregators, not necessary.  Needs to be flipped to false
     for modules with artifacts. -->
    <maven.deploy.skip>true</maven.deploy.skip>
    <!-- Shared properties by all sub-projects -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <!-- specifies that the system uses Java 8 by default -->
    <maven.compiler.source>11</maven.compiler.source>
    <maven.compiler.target>11</maven.compiler.target>

    <!-- Dependencies -->
    <beam.version>2.27.0</beam.version>
    <hadoop.version>3.1.1</hadoop.version>
    <hamcrest.version>2.2</hamcrest.version>
    <junit4.version>4.13.1</junit4.version>
    <play.json.version>2.9.2</play.json.version>
    <scala.minor.version>2.12</scala.minor.version>
    <scala.version>2.12.13</scala.version>
    <scalafmt.version>2.7.5</scalafmt.version>
    <spotless.version>1.25.1</spotless.version>
    <scalatest.version>3.2.2</scalatest.version>
    <slf4j.version>1.7.30</slf4j.version>

    <!-- Plugins -->
    <plugin.enforcer.maven.version>3.0.0-M3</plugin.enforcer.maven.version>
    <plugin.failsafe.maven.version>3.0.0-M5</plugin.failsafe.maven.version>
    <plugin.jar.maven.version>3.2.0</plugin.jar.maven.version>
    <plugin.maven.scala.version>4.4.0</plugin.maven.scala.version>
    <plugin.maven.scalatest.version>2.0.2</plugin.maven.scalatest.version>
    <plugin.shade.maven.version>3.2.4</plugin.shade.maven.version>
    <plugin.spotless.version>2.7.0</plugin.spotless.version>
    <plugin.surefire.maven.version>3.0.0-M5</plugin.surefire.maven.version>
  </properties>

  <profiles>
    <!--
      Use this profile if using Beam SNAPSHOT artifacts that were built locally, such as:
      ./gradlew -Ppublishing -PdistMgmtSnapshotsUrl=/tmp/snapshots/ -p sdks/java/io/parquet/ publish
    -->
    <profile>
      <id>local-snapshots</id>
      <repositories>
        <repository>
          <id>local.snapshots</id>
          <name>Local Snapshot Repository</name>
          <url>file:///tmp//snapshots/</url>
          <releases>
            <enabled>false</enabled>
          </releases>
          <snapshots>
            <enabled>true</enabled>
          </snapshots>
        </repository>
      </repositories>
    </profile>

    <!--
      Use this profile if using SNAPSHOT artifacts built by Apache.
    -->
    <profile>
      <id>apache-snapshots</id>
      <repositories>
        <repository>
          <id>apache.snapshots</id>
          <name>Apache Development Snapshot Repository</name>
          <url>https://repository.apache.org/content/repositories/snapshots/</url>
          <releases>
            <enabled>false</enabled>
          </releases>
          <snapshots>
            <enabled>true</enabled>
          </snapshots>
        </repository>
      </repositories>
    </profile>

    <!--
      Use this profile if using Apache staging release artifacts.
    -->
    <profile>
      <id>apache-staging</id>
      <repositories>
        <repository>
          <id>apache.staging</id>
          <name>Apache Development Staging Repository</name>
          <url>https://repository.apache.org/content/repositories/staging/</url>
          <releases>
            <enabled>true</enabled>
          </releases>
        </repository>
      </repositories>
      <pluginRepositories>
        <pluginRepository>
          <id>apache.staging</id>
          <name>Apache Development Staging Repository</name>
          <url>https://repository.apache.org/content/repositories/staging/</url>
        </pluginRepository>
      </pluginRepositories>
    </profile>
  </profiles>

  <build>
    <pluginManagement>
      <plugins>

        <!-- Minimum version of maven to build this project -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>${plugin.enforcer.maven.version}</version>
          <executions>
            <execution>
              <id>enforce-maven</id>
              <goals>
                <goal>enforce</goal>
              </goals>
              <configuration>
                <rules>
                  <requireMavenVersion>
                    <version>3.5</version>
                  </requireMavenVersion>
                </rules>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <!-- Add the main class name to the jar -->
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.2.0</version>
          <configuration>
            <archive>
              <manifest>
                <mainClass>${exec.mainClass}</mainClass>
              </manifest>
            </archive>
          </configuration>
        </plugin>

        <!-- Shaded fat jar with all dependencies -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-shade-plugin</artifactId>
          <version>${plugin.shade.maven.version}</version>
          <configuration>
            <filters>
              <filter>
                <artifact>*:*</artifact>
                <excludes>
                  <exclude>META-INF/*.SF</exclude>
                  <exclude>META-INF/*.DSA</exclude>
                  <exclude>META-INF/*.RSA</exclude>
                </excludes>
              </filter>
            </filters>
            <!-- Additional configuration. -->
          </configuration>
          <executions>
            <execution>
              <phase>package</phase>
              <goals>
                <goal>shade</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <!-- Launch scalatests as well as Java -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${plugin.surefire.maven.version}</version>
          <configuration>
            <testSourceDirectory>src/test/java</testSourceDirectory>
            <testSourceDirectory>src/test/scala</testSourceDirectory>
            <includes>
              <include>**/*Spec.java</include>
              <include>**/*Test.java</include>
            </includes>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>${plugin.failsafe.maven.version}</version>
        </plugin>

        <!-- Build both java and scala classes, and they can rely on each other. -->
        <plugin>
          <groupId>net.alchim31.maven</groupId>
          <artifactId>scala-maven-plugin</artifactId>
          <version>${plugin.maven.scala.version}</version>
          <executions>
            <execution>
              <id>scala-compile-first</id>
              <phase>process-resources</phase>
              <goals>
                <goal>add-source</goal>
                <goal>compile</goal>
              </goals>
            </execution>
            <execution>
              <id>scala-test-compile</id>
              <phase>process-test-resources</phase>
              <goals>
                <goal>testCompile</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <!-- Format Java and Scala with mvn spotless:apply -->
        <plugin>
          <groupId>com.diffplug.spotless</groupId>
          <artifactId>spotless-maven-plugin</artifactId>
          <version>${plugin.spotless.version}</version>
          <configuration>
            <java>
              <removeUnusedImports />
              <googleJavaFormat />
            </java>
            <scala>
              <includes>
                <include>src/main/scala/**/*.scala</include>
                <include>src/test/scala/**/*.scala</include>
              </includes>
              <scalafmt>
                <version>${scalafmt.version}</version>
              </scalafmt>
            </scala>
          </configuration>
        </plugin>

        <!-- Run scalatest unit tests -->
        <plugin>
          <groupId>org.scalatest</groupId>
          <artifactId>scalatest-maven-plugin</artifactId>
          <version>${plugin.maven.scalatest.version}</version>
          <executions>
            <execution>
              <id>test</id>
              <goals>
                <goal>test</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>net.alchim31.maven</groupId>
        <artifactId>scala-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.scalatest</groupId>
        <artifactId>scalatest-maven-plugin</artifactId>
      </plugin>
    </plugins>
  </build>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
      </plugin>
    </plugins>
  </reporting>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.apache.beam</groupId>
        <artifactId>beam-runners-spark</artifactId>
        <version>${beam.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.beam</groupId>
        <artifactId>beam-runners-direct-java</artifactId>
        <version>${beam.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.beam</groupId>
        <artifactId>beam-sdks-java-core</artifactId>
        <version>${beam.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.beam</groupId>
        <artifactId>beam-sdks-java-nexmark</artifactId>
        <version>${beam.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.beam</groupId>
        <artifactId>beam-sdks-java-io-parquet</artifactId>
        <version>${beam.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.hadoop</groupId>
        <artifactId>hadoop-common</artifactId>
        <version>${hadoop.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.hadoop</groupId>
        <artifactId>hadoop-mapreduce-client-core</artifactId>
        <version>${hadoop.version}</version>
      </dependency>

      <!-- Scala -->
      <dependency>
        <groupId>org.scala-lang</groupId>
        <artifactId>scala-library</artifactId>
        <version>${scala.version}</version>
      </dependency>
      <dependency>
        <groupId>com.typesafe.play</groupId>
        <artifactId>play-json_${scala.minor.version}</artifactId>
        <version>${play.json.version}</version>
      </dependency>

      <!-- Tests -->
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>${junit4.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>hamcrest-core</artifactId>
        <version>${hamcrest.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>hamcrest-library</artifactId>
        <version>${hamcrest.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.scalatest</groupId>
        <artifactId>scalatest_${scala.minor.version}</artifactId>
        <version>${scalatest.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-simple</artifactId>
        <version>${slf4j.version}</version>
        <scope>test</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <!-- Tests -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <!-- All unit tests use direct runner -->
    <dependency>
      <groupId>org.apache.beam</groupId>
      <artifactId>beam-runners-direct-java</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-library</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.scalatest</groupId>
      <artifactId>scalatest_${scala.minor.version}</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <modules>
    <module>core</module>
    <module>core-scala</module>
  </modules>

</project>
